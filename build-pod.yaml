apiVersion: v1
kind: Pod
spec:
  containers:  # list of containers that you want present for your build, you can define a default container in the Jenkinsfile
    - name: maven
      image: maven:3.8.6-openjdk-11
      command: ["tail", "-f", "/dev/null"]  # this or any command that is bascially a noop is required, this is so that you don't overwrite the entrypoint of the base container
      imagePullPolicy: Always # use cache or pull image for agent
      resources:  # limits the resources your build contaienr
        requests:
          memory: "1Gi"
          cpu: "500m"
        limits:
          memory: "2Gi"
      env:
      - name: JAVA_OPTS
        # To allocate controllers using a non-default storage class, add the following
        # -Dcom.cloudbees.masterprovisioning.kubernetes.KubernetesMasterProvisioning.storageClassName=some-storage-class
        value: >-
          -XshowSettings:vm
          -Djavax.net.ssl.trustStore=$JAVA_HOME/lib/security/cacerts
          -Djavax.net.ssl.trustStorePassword=changeit
          -Dmaven.wagon.http.ssl.insecure=true 
          -Dmaven.wagon.http.ssl.allowall=true
    - name: docker
      image: docker:23.0.1
      command: ["tail", "-f", "/dev/null"]
      imagePullPolicy: Always
      volumeMounts:
        - name: docker
          mountPath: /var/run/docker.sock # We use the k8s host docker engine
  volumes:
    - name: docker
      hostPath:
        path: /var/run/docker.sock
